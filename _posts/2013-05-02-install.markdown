---
layout: default
title: Tutorial de Instalação para Rails Girls
permalink: install
---

# Tutorial de Instalação para Rails Girls

Criado por Katie Ots, [site da Katie](http://www.katieots.com/)  
Traduzido por Marcela Oliveira, [@magaeu](https://twitter.com/magaeu)

<span class="muted">Tempo previsto: 5min ativo / 15-30min passivo</span>

Para construir apps e outras coisas com Ruby on Rails, precisamos configurar alguns softwares e o ambiente de desenvolvimento em seu computador.

Siga as instruições para seu sistema operacional (SO). Se você tiver algum problema, não entre em pânico. Avise-nos e vamos resolver juntos.

* [Instalação para OS X](#instalao-para-os-x)
* [Instalação para Windows](#instalao-para-windows)
* [Instalação para Linux](#instalao-para-linux)
* [Utilização da Máquina Virtual](#utilizao-da-mquina-virtual)
* [Utilização de Serviço em Nuvem - Não é necessária qualquer instalação](#utilizao-de-servio-em-nuvem)

<hr />

## Instalação para OS X

### *1.* Vamos checar a versão do seu sistema operacional.

Clique no menu Apple e escolha *About this Mac*.

![Apple menu](images/1.png "Apple menu")

### *2.* Na janela você irá encontrar a versão do seu sistema operacional.
Se a versão do seu sistema começa com 10.6, 10.7, 10.8, 10.9, 10.10 ou 10.11, esse é o tutorial exato para você. Caso seja outra versão, podemos configurar sua máquina durante o evento.

![About this Mac dialog](images/2.png "About this Mac dialog")

### *3a.* Se a versão do seu OS X é igual ou maior que 10.9:

Se o número da sua versão começa com 10.9, 10.10 ou 10.11, siga os passos abaixo. Vamos instalar o *homebrew* e *rbenv*.

#### *3a1.* Instalação via terminal por linha de comando:

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### *3a2.* Instalar [Homebrew](http://brew.sh/):

{% highlight sh %}
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
{% endhighlight %}

#### *3a3.* Instalar [rbenv](https://github.com/sstephenson/rbenv):

{% highlight sh %}
brew update
brew install rbenv ruby-build
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
echo 'export PATH="$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
source ~/.bash_profile
{% endhighlight %}

#### *3a4.* Instalar Ruby com rbenv:

Você pode encontrar a versão mais recente do Ruby pelo comando "rbenv install -l".

{% highlight sh %}
rbenv install 2.3.1
{% endhighlight %}

Se aparecer o erro **OpenSSL::SSL::SSLError: ... : certificate verify failed**, tente dessa maneira:

{% highlight sh %}
brew install curl-ca-bundle
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### *3a5.* Configurar versão padrão do Ruby:

{% highlight sh %}
rbenv global 2.3.1
{% endhighlight %}

#### *3a6.* Instalar Rails:

{% highlight sh %}
gem install rails --no-document
{% endhighlight %}

### *3b.* Se a versão do seu OS X é 10.6, 10.7, ou 10.8:

Faça download do **RailsInstaller** para a versão do seu OS X:

* [RailsInstaller para 10.7 e 10.8](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
* [RailsInstaller para 10.6](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

Dê um duplo clique no arquivo baixado e ele será descompactado no diretório atual. Dê um duplo clique no arquivo descompactado **RailsInstaller-1.0.4-osx-10.7.app** ou **RailsInstaller-1.0.4-osx-10.6.app** e siga as instruções. O arquivo README será aberto com **Rails Installer OS X** no topo. Favor **IGNORAR** as instruções desse arquivo.

Se a versão do Rails não for a mais recente, você pode atualizá-la via terminal:

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

Para ter certeza que tudo funciona bem crie uma aplicação via terminal:

{% highlight sh %}
rails new myapp
{% endhighlight %}

### *4.* Instalar editor de texto

Para esse workshop recomendamos o editor de texto Atom.

* [Baixar e instalar Atom](https://atom.io/)

Se você estiver usando Mac OS X 10.7 ou versões anteriores, você pode utilizar outro editor [Sublime Text 2](http://www.sublimetext.com/2).

### *5.* Atualizar seu navegador

Acesse [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador, caso não tenha a versão mais recente.

**Parabéns, seu ambiente de desenvolvimento Ruby on Rail está pronto!**

<hr />

## Instalação para Windows

### *1.* Instalar Rails

Baixar o [RailsInstaller](https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-3.4.0.exe) e executá-lo. Utilize as configurações padrões durante a instalação.

Abra o `Command Prompt with Ruby and Rails` e execute o seguinte comando:

{% highlight sh %}
rails -v
{% endhighlight %}

Se a versão do Rails for menor que 5, atualize-o utilizando o seguinte comando:

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

## Possíveis erros

### Gem::RemoteFetcher error

Se você se deparar com o erro abaixo quando executar `rails new railsgirls` ou `gem update rails`:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-0.6.11.gem)
{% endhighlight %}

Significa que você possui uma versão antiga do **Rubygems** e será necessário atualizá-lo manualmente. Primeiro, verifique a sua versão do Rubygems (via terminal):

{% highlight sh %}
gem -v
{% endhighlight %}

Se a versão for menor que `2.2.3` você precisa atualizá-la manualmente através dos seguintes passos:

Primeiro baixe o [ruby-gems-update gem](https://github.com/rubygems/rubygems/releases/download/v2.2.3/rubygems-update-2.6.7.gem). Mova o arquivo para `c:\\rubygems-update-2.6.7.gem` e execute (via terminal):

{% highlight sh %}
gem install --local c:\\rubygems-update-2.6.7.gem
update_rubygems --no-document
gem uninstall rubygems-update -x
{% endhighlight %}

Verifique novamente sua versão do Rubygems:

{% highlight sh %}
gem -v
{% endhighlight %}

Tenha certeza que seja igual ou maior que `2.6.7`. Caso não, execute o procedimento acima novamente.

Se você ainda está enfrentando problemas, você pode sempre encontrar a versão mais recente do rubygems online em [rubygems.org](https://rubygems.org/pages/download). Se você clicar em **GEM**, você terá a última versão.

### Durante bundle install

O erro `Gem::RemoteFetcher::FetchError: SSL_connect` pode também acontecer durante a etapa de `bundle install` ao criar um novo rails app.

O erro irá mencionar [bit.ly/ruby-ssl](http://bit.ly/ruby-ssl). O que é relevante para usuários de Windows neste ponto é [este GitHub gist](https://gist.github.com/867550). O manual descrito se provou ser bem sucedido para resolver esse erro de `bundle install`.

### Erro 'x64_mingw' não é uma plataforma válida

Algumas vezes você pode se deparar com o seguinte erro quando executar `rails server`:

`'x64_mingw' is not a valid platform`

Se você encontrar esse erro após utilizar o **RailsInstaller**, você terá que editar o arquivo `Gemfile`. Para isso, siga os passos abaixo:

No final do arquivo verifique se as últimas linhas possuem as seguintes informações:

`gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]`.

Se a linha possui `:x64_mingw`, então apague a parte `:x64_mingw`.

O final deverá ser da seguinte maneira:
`gem 'tzinfo-data', platforms: [:mingw, :mswin]`.

Após fazer o procedimento, favor usar seu prompt de comando novamente e executar `bundle update`.

### *2.* Instalar editor de texto

Para esse workshop recomendamos o editor de texto Atom.
* [Baixar e instalar Atom](https://github.com/atom/atom/releases/latest)
  * Baixar um arquivo .zip do Atom para Windows e descompactá-lo.
  * Copiar o diretório para seus Arquivos de Programas (Program Files).
  * Abrir o Atom no diretório.

Se você estiver usando Windows Vista ou versões anteriores, você pode utilizar outro editor [Sublime Text 2](http://www.sublimetext.com/2).

### *3.* Atualizar seu navegador (browser)

Se você utiliza **Internet Explorer**, recomendamos instalar o [Firefox](mozilla.org/firefox) ou [Google Chrome](google.com/chrome).

Acesse [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador, caso não tenha a versão mais recente.

### *4.* Instalar Node

O procedimento não é estritamente necessário, mas pode evitar problemas com e `ExecJS::RuntimeError` que podem ocorrer posteriormente ([ver stackoverflow](https://stackoverflow.com/questions/12520456/execjsruntimeerror-on-windows-trying-to-follow-rubytutorial)).

* Acesse [https://nodejs.org/](https://nodejs.org/) e instale o pacote node LTS
* Reabra seu `Rails Command Shell`

Verifique sua versão do Node:

{% highlight sh %}
node --version
{% endhighlight %}

Tenha certeza que está mostrando uma versão qualquer do Node.

### *5.* Verificar o ambiente

Para ter certeza que tudo funciona bem crie uma aplicação via terminal:

{% highlight sh %}
rails new myapp
cd myapp
rails server
{% endhighlight %}

Acesse [http://localhost:3000](http://localhost:3000) em seu navegador. Você deverá ver a página 'Yay! You're on Rails!'.

**Parabéns, seu ambiente de desenvolvimento Ruby on Rail está pronto!**

**Coach:** Recomendamos verificar o procedimento executando o comando scaffold e adicionando dados com a página gerada pelos coaches para assegurar que tudo está funcionando bem.

<hr />

## Instalação para Linux

### *1.* Instalar Rails

Para instalar o ambiente de Ruby on Rails você deve apenas copiar a linha abaixo para sua distribuição Linux (Ubuntu ou Fedora), e colar no **Terminal** e pressionar Enter. Aproveite o texto que aparece na tela; irá levar algum tempo para o processo acabar. Nesse meio tempo, encorajamos você a pegar uma bebida refrescante antes de comecar.

#### Para Ubuntu:

{% highlight sh %}
sudo apt-get install curl
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

Se você for usar a instalação do **RVM** com gnome-terminal, você provavelmente vai precisar mudar suas configurações padrões antes de começar a usar a versão correta do Ruby on Rails. Descubra como: [Documentação do RVM](http://rvm.io/integration/gnome-terminal).

#### Para Fedora:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}

Para ter certeza que tudo funciona bem crie uma aplicação via terminal:

{% highlight sh %}
rails new myapp
{% endhighlight %}

### *2.* Instalar editor de texto

Para esse workshop recomendamos o editor de texto Sublime Text

* [Baixar e instalar Sublime Text](http://www.sublimetext.com/2)

### *3.* Atualizar seu navegador (browser)

Acesse [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador, caso não tenha a versão mais recente.

**Parabéns, seu ambiente de desenvolvimento Ruby on Rail está pronto!**

<hr />


## Utilização da Máquina Virtual

Ao invés de instalar todas as ferramentas em seu computador, você pode configurar um ambiente de desenvolvimento em uma Máquina Virtual. Favor, verifique os deltalhes [aqui]({% post_url 2014-03-24-alternative-dev-environment %}).

<hr />

## Utilização de Serviço em Nuvem

Ao invés de instalar **Ruby on Rails** e o editor em seu computador, você pode utilizar um webservice para desenvolvimento. Tudo que precisa é um navegador e conexão com a internet. Esse tutorial explica como utilizar o [codenvy.io](https://codenvy.io). Se você utilizar outro serviço, talvez eles utilizem outra nomeclatura, como por exemplo 'workspace' ao invés de 'box', mas o processo é geralmente bem parecido.

### *1.* Atualizar seu navegador (browser)

Se você utiliza **Internet Explorer**, recomendamos instalar o [Firefox](mozilla.org/firefox) ou [Google Chrome](google.com/chrome).

Acesse [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador, caso não tenha a versão mais recente.

### *2.* Criar uma conta

Acesse [codenvy.io](https://codenvy.io) e crie sua conta de graça.

![](/images/codenvy/create-account.jpg)

### *3.* Configure seu workspace de desenvolvimento Ruby on Rails

O Ruby on Rails Workspace possui pré-instalado todo o software que nós precisamos para o workshop. Para criar um workspace, logue em [codenvy.io](https://codenvy.io) e clique em 'Dashboard'. Se nenhum foi criado, o botão 'New Workspace' irá aparecer.

![](/images/codenvy/create-workspace-dashboard.jpg)

Na tela 'New workspace', algumas configurações tem que ser feitas.

* 'New from blank, template, or sample project' deve estar selecionado
* Selecione 'Create new workspace from stack'
* Selecione 'Ready to go Stacks'
* Selecione 'Rails' Stack
* De ao workspace um nome de sua escolha. Neste exemplo, ele se chamará 'railsgirls'.
* Agora clique em 'Create' para criar o workspace (levará alguns minutos para o processo finalizar)

![](/images/codenvy/create-workspace.jpg)

* Codeenvy cria uma pasta '/projects' durante a instalação, que você poderá depois colocar seu código. Ele também cria uma pasta 'console-ruby-simple' que nós não precisamos. VOcê pode vê-lo no Project Explorer. Ignore ou delete a pasta clicando com o botão direito.

### *4.* Encontre e reinicie seu workspace
* Se você acabou de criar seu projeto, você pode provavelmente pular estes passos - eles são bons de saber se você fizer login no Codenvy mais tarde
* Se você não utilizou seu workspace ou projetos por um tempo, eles talvez possam ser desligados por inatividade. Vocé irá notar um círculo vazio próximo ao nome do workspace.

![](/images/codenvy/start-workspace.jpg)

* Neste caso simplesmente clique no nome do workspace. Ele então será reiniciado (o que pode demorar um pouco) e depois abrirá.
* Se você reiniciou seu workspace, você precisará rodar o comando `bundle` de novo no diretório do seu projeto Rails (o que você irá aprender mais sobre o comando no tutorial do app)

### *5.* Codificar com sua box de desenvolvimento

* Ao lado esquerdo você encontra o navegador de arquivos onde você pode navegar entre seus diretórios e arquivos
* No meio você encontra o editor para modificar seus arquivos
* Na parte de baixo você encontra o terminal onde executa os comandos
* Tudo que você precisa agora está na janela do seu browser - não precisa iniciar um editor ou terminal em outro lugar
* Se você está seguindo um guia ou um tutorial, use comandos para Linux mesmo que você esteja em um computador Windows - seu sistema operacional não importa, desde que todos os comandos estejam rodando em  uma máquina do seu projeto na nuvem, que roda Linux
* Se um guia ou tutorial te perguntar para rodar um comando rails que contem `rails` ou `rake`, adicione anteriormente `bundle exec` a este comando, e. g. `bundle exec rake db:migrate`. Exceção: o comando `rails new` não é pré-fixado.
* Se um guia ou tutorial te pedir para iniciar o servidor com `rails server` ou `rails s`, adicione `-b 0.0.0.0` ao final deste comando, então execute `rails server -b 0.0.0.0`
* Se um guia ou tutorial te pedir para apontar seu browser para algo como http://localhost:3000, siga estas instruções:
  * Abra 'Operations perspective' (1) no Codenvy, vá na aba 'Servers' (2) e selecione 'Server Address' na linha começando com 'Server-3000-tcp' (3). Ao invés de abrir http://localhost:3000, abra esta URL no seu browser.
  ![](/images/codenvy/get-workspace-ip.jpg)
  * Se, por exemplo, você for pedido para abrir http://localhost:3000/posts, abra a URL anterior no seu browser e adicione '/posts' a URL.
